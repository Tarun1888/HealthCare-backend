{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun\\\\OneDrive\\\\Desktop\\\\NirogGyan\\\\healthcare-booking-app\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    case 'TOKEN_VERIFIED':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check for existing token on app load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      verifyToken(token);\n    } else {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  }, []);\n  const verifyToken = async token => {\n    try {\n      const response = await fetch('/api/verify-token', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        dispatch({\n          type: 'TOKEN_VERIFIED',\n          payload: {\n            user: data.user,\n            token\n          }\n        });\n      } else {\n        localStorage.removeItem('token');\n        dispatch({\n          type: 'LOGOUT'\n        });\n      }\n    } catch (error) {\n      localStorage.removeItem('token');\n      dispatch({\n        type: 'LOGOUT'\n      });\n    }\n  };\n  const login = async (email, password) => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: {\n            user: data.user,\n            token: data.token\n          }\n        });\n        return {\n          success: true\n        };\n      } else {\n        dispatch({\n          type: 'SET_ERROR',\n          payload: data.error\n        });\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      const errorMsg = 'Network error. Please try again.';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: errorMsg\n      });\n      return {\n        success: false,\n        error: errorMsg\n      };\n    }\n  };\n  const signup = async (name, email, password) => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const response = await fetch('/api/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: {\n            user: data.user,\n            token: data.token\n          }\n        });\n        return {\n          success: true\n        };\n      } else {\n        dispatch({\n          type: 'SET_ERROR',\n          payload: data.error\n        });\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      const errorMsg = 'Network error. Please try again.';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: errorMsg\n      });\n      return {\n        success: false,\n        error: errorMsg\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n\n  // Function to get auth headers for API calls\n  const getAuthHeaders = () => {\n    if (state.token) {\n      return {\n        'Authorization': `Bearer ${state.token}`,\n        'Content-Type': 'application/json'\n      };\n    }\n    return {\n      'Content-Type': 'application/json'\n    };\n  };\n  const value = {\n    ...state,\n    login,\n    signup,\n    logout,\n    clearError,\n    getAuthHeaders\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","AuthContext","initialState","user","token","isAuthenticated","loading","error","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","localStorage","getItem","verifyToken","response","fetch","headers","ok","data","json","removeItem","login","email","password","method","body","JSON","stringify","setItem","success","errorMsg","signup","name","logout","clearError","getAuthHeaders","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Tarun/OneDrive/Desktop/NirogGyan/healthcare-booking-app/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'SET_LOADING':\r\n      return { ...state, loading: action.payload };\r\n    case 'SET_ERROR':\r\n      return { ...state, error: action.payload, loading: false };\r\n    case 'CLEAR_ERROR':\r\n      return { ...state, error: null };\r\n    case 'TOKEN_VERIFIED':\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check for existing token on app load\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      verifyToken(token);\r\n    } else {\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n    }\r\n  }, []);\r\n\r\n  const verifyToken = async (token) => {\r\n    try {\r\n      const response = await fetch('/api/verify-token', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        dispatch({\r\n          type: 'TOKEN_VERIFIED',\r\n          payload: { user: data.user, token }\r\n        });\r\n      } else {\r\n        localStorage.removeItem('token');\r\n        dispatch({ type: 'LOGOUT' });\r\n      }\r\n    } catch (error) {\r\n      localStorage.removeItem('token');\r\n      dispatch({ type: 'LOGOUT' });\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    dispatch({ type: 'SET_LOADING', payload: true });\r\n    try {\r\n      const response = await fetch('/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        localStorage.setItem('token', data.token);\r\n        dispatch({\r\n          type: 'LOGIN_SUCCESS',\r\n          payload: { user: data.user, token: data.token }\r\n        });\r\n        return { success: true };\r\n      } else {\r\n        dispatch({ type: 'SET_ERROR', payload: data.error });\r\n        return { success: false, error: data.error };\r\n      }\r\n    } catch (error) {\r\n      const errorMsg = 'Network error. Please try again.';\r\n      dispatch({ type: 'SET_ERROR', payload: errorMsg });\r\n      return { success: false, error: errorMsg };\r\n    }\r\n  };\r\n\r\n  const signup = async (name, email, password) => {\r\n    dispatch({ type: 'SET_LOADING', payload: true });\r\n    try {\r\n      const response = await fetch('/api/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        localStorage.setItem('token', data.token);\r\n        dispatch({\r\n          type: 'LOGIN_SUCCESS',\r\n          payload: { user: data.user, token: data.token }\r\n        });\r\n        return { success: true };\r\n      } else {\r\n        dispatch({ type: 'SET_ERROR', payload: data.error });\r\n        return { success: false, error: data.error };\r\n      }\r\n    } catch (error) {\r\n      const errorMsg = 'Network error. Please try again.';\r\n      dispatch({ type: 'SET_ERROR', payload: errorMsg });\r\n      return { success: false, error: errorMsg };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  // Function to get auth headers for API calls\r\n  const getAuthHeaders = () => {\r\n    if (state.token) {\r\n      return {\r\n        'Authorization': `Bearer ${state.token}`,\r\n        'Content-Type': 'application/json'\r\n      };\r\n    }\r\n    return { 'Content-Type': 'application/json' };\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    signup,\r\n    logout,\r\n    clearError,\r\n    getAuthHeaders\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}